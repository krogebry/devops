{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "",

  "Parameters": { 
    "VpcId": {
      "Type": "AWS::EC2::VPC::Id",
      "Description": "VpcId of your existing Virtual Private Cloud (VPC)",
      "ConstraintDescription": "Must be the VPC Id of an existing Virtual Private Cloud."
    },
    
    "StackVersion": {
      "Type": "String",
      "Description": "Role profile ARN"
    },

    "MgtCidr": {
      "Type": "String",
      "Description": "Role profile ARN"
    },

    "Subnets": {
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Description": "The list of SubnetIds in your Virtual Private Cloud (VPC)",
      "ConstraintDescription": "must be a list of an existing subnets in the selected Virtual Private Cloud."
    },

    "Zones": {
      "Type": "List<String>",
      "Description": "The list of AvailabilityZones for your Virtual Private Cloud (VPC)",
      "ConstraintDescription": "must be a list if valid EC2 availability zones for the selected Virtual Private Cloud"
    },

    "KeyName": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "The EC2 Key Pair to allow SSH access to the instances",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },

    "ImageId": {
      "Type": "AWS::EC2::Image::Id",
      "Description": "The EC2 Image Id",
      "ConstraintDescription": "must be the name of an existing AMI."
    }
  },

  "Resources": {

    "InstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [ {
            "Effect": "Allow",
            "Principal": { "Service": [ "ec2.amazonaws.com" ] },
            "Action": [ "sts:AssumeRole" ]
          } ]
        },
        "Path": "/"
      }
    },

    "RolePolicies": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "root",
        "PolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Action": "*",
            "Resource": "*"
          }]
        },
        "Roles": [{ "Ref": "InstanceRole" }]
      }
    },

    "RootInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [{ "Ref": "InstanceRole" }]
      }
    },

    "InstanceSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "Tags": [{
          "Key": "Application",
          "Value": "Bootstrap"
        }],
        "VpcId": { "Ref": "VpcId" },
        "GroupDescription": "Enable HTTP access and SSH access",
        "SecurityGroupIngress": [{
          "CidrIp": { "Ref": "MgtCidr" },
          "ToPort": "22",
          "FromPort": "22",
          "IpProtocol": "tcp"
        }]
      }
    },

    "Bootstrap": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "MinSize": "1",
        "MaxSize": "3",
        "DesiredCapacity": "1",
        "AvailabilityZones": { "Ref": "Zones" },
        "VPCZoneIdentifier": { "Ref": "Subnets" },
        "LaunchConfigurationName": { "Ref": "BootstrapLC" }
      },
      "CreationPolicy": {
        "ResourceSignal": {
          "Timeout": "PT15M"
        }
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "PauseTime": "PT15M",
          "MaxBatchSize": "1",
          "WaitOnResourceSignals": "true",
          "MinInstancesInService": "1"
        }
      }
    },

    "BootstrapLC": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Metadata": {
        "Comment": "Bootstrap a new Bootstrap instance.",
				"AWS::CloudFormation::Authentication":{
        	"S3AccessCreds":{
          	"type":"S3",
            "roleName":{
            	"Ref":"InstanceRole"
            }
          }
        },
        "AWS::CloudFormation::Init": {
          "config": {
            "packages": {
              "yum": {
                "jq": [],
                "sysstat": []
              }
            },

            "files": {
              "/etc/cfn/cfn-hup.conf": {
                "mode": "000400",
                "owner": "root",
                "group": "root",
                "content": { "Fn::Join": ["", [
                  "[main]\n",
                  "stack=", { "Ref": "AWS::StackId" }, "\n",
                  "region=", { "Ref": "AWS::Region" }, "\n"
                ]]}
              },

              "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                "content": { "Fn::Join": ["", [
                  "[cfn-auto-reloader-hook]\n",
                  "triggers=post.update\n",
                  "path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init\n",
                  "action=/opt/aws/bin/cfn-init -v ",
                  " --stack ", { "Ref": "AWS::StackName" },
                  " --resource BootstrapLC ",
                  " --region ", { "Ref": "AWS::Region" }, "\n",
                  "runas=root\n"
                ]]}
              }
            },

            "services": {
              "sysvinit": {
                "cfn-hup": { "enabled": "true", "ensureRunning": "true",
                              "files": ["/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf"]}
              }
            }
          }
        }
      },

      "Properties": {
        "KeyName": { "Ref": "KeyName" },
        "ImageId": { "Ref": "ImageId" },
        "UserData": { "Fn::Base64": { "Fn::Join": ["", [
          "#!/bin/bash -xe\n",

          "/opt/aws/bin/cfn-init -v ",
          " --stack ", { "Ref": "AWS::StackName" },
          " --resource BootstrapLC ",
          " --region ", { "Ref": "AWS::Region" }, "\n",

          "mkdir -p /var/log/chef \n",
          "yum update -y \n",
          "pip install --upgrade awscli \n",
          "wget https://packages.chef.io/stable/el/7/chef-12.15.19-1.el7.x86_64.rpm \n",
          "rpm -i chef-12.15.19-1.el7.x86_64.rpm \n",
          "rm -rf chef-12.15.19-1.el7.x86_64.rpm \n",

          "/opt/aws/bin/cfn-signal -e $? ",
          " --stack ", { "Ref": "AWS::StackName" },
          " --resource Bootstrap ",
          " --region ", { "Ref": "AWS::Region" }, "\n"
        ]]}},
        "InstanceType": "c4.large",
        "SecurityGroups": [{ "Ref": "InstanceSG" }],
        "IamInstanceProfile": { "Ref": "RootInstanceProfile" },
        "AssociatePublicIpAddress": "true"
      }
    }

  },

  "Outputs": { }
}
