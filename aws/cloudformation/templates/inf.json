{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "",

  "Parameters": { 

    "StackVersion": {
      "Type": "String",
      "Description": "Role profile ARN"
    }

  },

  "Resources": {

    "BastionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [ {
            "Effect": "Allow",
            "Principal": { "Service": [ "ec2.amazonaws.com" ] },
            "Action": [ "sts:AssumeRole" ]
          } ]
        },
        "Path": "/"
      }
    },

    "RolePolicies": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "root",
        "PolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [{
            "Sid": "s3Perms",
            "Effect": "Deny",
            "Action": "*",
            "Resource": "*"
          }]
        },
        "Roles": [{ "Ref": "BastionRole" }]
      }
    },

    "BastionInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [{ "Ref": "BastionRole" }]
      }
    },

    "BastionASG": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "MinSize": "1",
        "MaxSize": "3",
        "DesiredCapacity": "1",
        "AvailabilityZones": { "Ref": "Zones" },
        "VPCZoneIdentifier": { "Ref": "Subnets" },
        //"LoadBalancerNames": [{ "Ref": "InternalELB" },{ "Ref": "ExternalELB"}],
        "LaunchConfigurationName": { "Ref": "BastionLC" },
        "NotificationConfigurations": [{
          "TopicARN" : { "Ref" : "DevCentralSNSTopic" },
          "NotificationTypes" : [
            "autoscaling:EC2_INSTANCE_LAUNCH",
            "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
            "autoscaling:EC2_INSTANCE_TERMINATE",
            "autoscaling:EC2_INSTANCE_TERMINATE_ERROR"
          ]
        }]
      },
      "CreationPolicy": {
        "ResourceSignal": {
          "Timeout": "PT30M"
        }
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "PauseTime": "PT30M",
          "MaxBatchSize": "1",
          "WaitOnResourceSignals": "true",
          "MinInstancesInService": "1"
        }
      }
    },


    "BastionLC": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Metadata": {
        "Comment": "Bootstrap a new Bastion instance.",
        "AWS::CloudFormation::Init": {
          "configSets": {
            "base_install": [
              "cfn",
              "cw_logs",
              "cw_collectd"
            ]
          }
        }
      },

      "Properties": {
        "KeyName": { "Ref": "KeyName" },
        "ImageId": { "Ref": "ImageId" },
        "UserData": { "Fn::Base64": { "Fn::Join": ["", [
          "#!/bin/bash -xe\n",
          "/opt/aws/bin/cfn-init -v ",
          " --stack ", { "Ref": "AWS::StackName" },
          " --resource BastionLC ",
          " --configsets base_install ",
          " --region ", { "Ref": "AWS::Region" }, "\n",

          "/opt/aws/bin/cfn-signal -e $? ",
          " --stack ", { "Ref": "AWS::StackName" },
          " --resource BastionASG ",
          " --region ", { "Ref": "AWS::Region" }, "\n"
        ]]}},
        "InstanceType": { "Ref": "InstanceType" },
        "SecurityGroups": [{ "Ref": "InstanceSG" }],

        "IamInstanceProfile": { "Ref": "BastionInstanceProfile" },
        "InstanceMonitoring": "false",
        "AssociatePublicIpAddress": "true"
      }
    },

    "InstanceSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "Tags": [{
          "Key": "Role",
          "Value": "Bastion"
        },{
          "Key": "Version",
          "Value": { "Ref": "StackVersion" }
        }],
        "VpcId": { "Ref": "VpcId" },
        "GroupDescription": "Enable HTTP access and SSH access",
        "SecurityGroupIngress": [{
          "CidrIp": { "Ref": "MgtCidr" },
          "ToPort": "22",
          "FromPort": "22",
          "IpProtocol": "tcp"
        }]
      }
    },

    "DevCentralS3Bucket": {
      "Type" : "AWS::S3::Bucket",
      "Properties" : {
				"Tags": [{
          "Key": "Name",
          "Value": "dev-central"
        },{
          "Key": "Version",
          "Value": { "Ref": "StackVersion" }
        }],
        "BucketName" : { "Fn::Join": [ "", ["dev-central-", { "Ref": "StackVersion" }]]}
      }
    },

		"DevCentralS3Policy" : {
			"Type" : "AWS::S3::BucketPolicy",
   		"Properties" : {
        "PolicyDocument" : {
          "Id" : "DevCentralS3Policy",
         	"Version": "2012-10-17",
         	"Statement" : [{
            "Sid" : "ReadAccess",
            "Action" : [ "s3:*" ],
            "Effect" : "Allow",
            "Resource" : { "Fn::Join" : [ "", [ "arn:aws:s3:::", { "Ref" : "DevCentralS3Bucket" } , "/*" ] ] },
            "Principal": { "Service": [ "ec2.amazonaws.com" ] }
          }]
      	},
				"Bucket" : { "Ref" : "DevCentralS3Bucket" }
			}
		},

		"DevOpsKey" : {
  		"Type" : "AWS::KMS::Key",
  		"Properties" : {
    		"Description" : "Devops Key",
    		"KeyPolicy" : {
      		"Version": "2012-10-17",
      		"Id": "devops-key",
      		"Statement": [{
          	"Sid": "Allow administration of the key",
          	"Effect": "Allow",
          	//"Principal": { "AWS": "arn:aws:iam::903369196314:user/bkroger" },
          	"Principal": "*",
          	"Action": [
            	"kms:Create*",
            	"kms:Describe*",
            	"kms:Enable*",
            	"kms:List*",
            	"kms:Put*",
            	"kms:Update*",
            	"kms:Revoke*",
            	"kms:Disable*",
            	"kms:Get*",
            	"kms:Delete*",
            	"kms:ScheduleKeyDeletion",
            	"kms:CancelKeyDeletion"
          	],
          	"Resource": "*"
        	}, {
          	"Sid": "Allow use of the key",
          	"Effect": "Allow",
          	"Principal": "*",
          	"Action": [
            	"kms:Encrypt",
            	"kms:Decrypt",
            	"kms:ReEncrypt*",
            	"kms:GenerateDataKey*",
            	"kms:DescribeKey"
          	], 
          	"Resource": "*"
        	}]
    		}
  		}
		},

		"DevOpsKeyAlias": {
  		"Type" : "AWS::KMS::Alias",
  		"Properties" : {
    		"AliasName" : { "Fn::Join": [ "", ["alias/devopskey_", { "Ref": "StackVersion" }]] },
    		"TargetKeyId" : { "Ref": "DevOpsKey" }
  		}
		},

		"KMSUseRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [ {
            "Effect": "Allow",
            "Principal": { "Service": [ "ec2.amazonaws.com" ] },
            "Action": [ "sts:AssumeRole" ]
          } ]
        },
        "Path": "/"
      }
    },

		"DevCentralSNSTopic" : {
    	"Type" : "AWS::SNS::Topic",
    	"Properties" : {
      	"Subscription" : [{
        	"Endpoint" : "bryan.kroger@gmail.com",
          "Protocol" : "email"
        }]
    	}
		},

		"DevCentralQueue" : {
    	"Type" : "AWS::SQS::Queue",
    	"Properties" : {
        "VisibilityTimeout" : "30"
    	}
		}

	},

  "Outputs": { }
}
