{
  "Resources": {
    "EC2Role": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Resource": "*",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "cloudformation:SignalResource",
                    "s3:Get*",
                    "s3:List*"
                  ],
                  "Effect": "Allow"
                }
              ]
            },
            "PolicyName": "ecs-instance-service"
          }
        ],
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Effect": "Allow"
            }
          ]
        },
        "Path": "/"
      }
    },
    "BastionASG": {
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MaxBatchSize": "1",
          "MinInstancesInService": "1",
          "WaitOnResourceSignals": "true",
          "PauseTime": "PT5M"
        }
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "MinSize": {
          "Ref": "MinSize"
        },
        "MaxSize": {
          "Ref": "MaxSize"
        },
        "VPCZoneIdentifier": {
          "Ref": "BastionSubnets"
        },
        "DesiredCapacity": {
          "Ref": "DesiredCapacity"
        },
        "LaunchConfigurationName": {
          "Ref": "BastionInstances"
        },
        "AvailabilityZones": {
          "Ref": "BastionZones"
        }
      },
      "CreationPolicy": {
        "ResourceSignal": {
          "Timeout": "PT15M"
        }
      }
    },
    "EC2InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "EC2Role"
          }
        ],
        "Path": "/"
      }
    },
    "BastionInstances": {
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "config": {
            "services": {
              "sysvinit": {
                "cfn-hup": {
                  "files": [
                    "/etc/cfn/cfn-hup.conf",
                    "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                  ],
                  "enabled": "true",
                  "ensureRunning": "true"
                }
              }
            },
            "files": {
              "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                "content": {
                  "Fn::Sub": "[cfn-auto-reloader-hook]\ntriggers=post.update\npath=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init\naction=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource BastionASG --region ${AWS::Region}\nrunas=root\n"
                }
              },
              "/etc/cfn/cfn-hup.conf": {
                "mode": "000400",
                "group": "root",
                "owner": "root",
                "content": {
                  "Fn::Sub": "[main]\nstack=${AWS::StackId}\nregion=${AWS::Region}\n"
                }
              }
            }
          }
        }
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "SecurityGroups": [
          {
            "Ref": "PrivateInternal"
          }
        ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "InstanceMonitoring": "false",
        "AssociatePublicIpAddress": "true",
        "IamInstanceProfile": {
          "Ref": "EC2InstanceProfile"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "\n",
              [
                {
                  "Fn::Sub": "#!/bin/bash -xe\n"
                },
                {
                  "Fn::Sub": "/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource BastionInstances --region ${AWS::Region}\n"
                },
                {
                  "Fn::Sub": "/opt/aws/bin/cfn-signal -e $?  --stack ${AWS::StackName} --resource BastionASG --region ${AWS::Region}\n"
                }
              ]
            ]
          }
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "ImageId": {
          "Ref": "ImageId"
        }
      }
    },
    "PrivateInternal": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allows public access by HTTP",
        "SecurityGroupIngress": [
          {
            "ToPort": "65535",
            "FromPort": "0",
            "CidrIp": "172.30.0.0/16",
            "IpProtocol": "tcp"
          },
          {
            "ToPort": "22",
            "FromPort": "22",
            "CidrIp": "172.0.0.0/8",
            "IpProtocol": "tcp"
          }
        ],
        "VpcId": {
          "Ref": "VpcId"
        }
      }
    }
  },
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "VpcId": {
      "Type": "AWS::EC2::VPC::Id",
      "ConstraintDescription": "Must be the VPC Id of an existing Virtual Private Cloud.",
      "Description": "VpcId of your existing Virtual Private Cloud (VPC)"
    },
    "InfStackVersion": {
      "Default": "0.1.0",
      "Type": "String",
      "Description": "Infrastructure stack version."
    },
    "InstanceType": {
      "Default": "t2.small",
      "Type": "String",
      "Description": "Type of instance."
    },
    "ImageId": {
      "Type": "AWS::EC2::Image::Id",
      "ConstraintDescription": "must be the name of an existing AMI.",
      "Description": "The EC2 Image Id"
    },
    "MinSize": {
      "Default": "1",
      "Type": "Number",
      "Description": "Minimum number of instances that can be launched in your ECS cluster."
    },
    "StackVersion": {
      "Default": "0.1.0",
      "Type": "String",
      "Description": "Stack version."
    },
    "KeyName": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair.",
      "Description": "The EC2 Key Pair to allow SSH access to the instances"
    },
    "MaxSize": {
      "Default": "1",
      "Type": "Number",
      "Description": "Maximum number of instances that can be launched in your ECS cluster."
    },
    "S3BucketName": {
      "Default": "0.1.0",
      "Type": "String",
      "Description": "Name of the DevOps bucket."
    },
    "BastionSubnets": {
      "Type": "List<AWS::EC2::Subnet::Id>",
      "ConstraintDescription": "must be a list of an existing subnets in the selected Virtual Private Cloud.",
      "Description": "The list of SubnetIds in your Virtual Private Cloud (VPC)"
    },
    "DesiredCapacity": {
      "Default": "1",
      "Type": "Number",
      "Description": "Number of instances to launch in your ECS cluster."
    },
    "BastionZones": {
      "Type": "List<String>",
      "ConstraintDescription": "must be a list if valid EC2 availability zones for the selected Virtual Private Cloud",
      "Description": "The list of AvailabilityZones for your Virtual Private Cloud (VPC)"
    }
  }
}
